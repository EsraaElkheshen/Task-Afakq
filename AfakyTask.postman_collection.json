{
	"info": {
		"_postman_id": "559cd718-6ebc-4710-98aa-0456ac32f45f",
		"name": "AfakyTask",
		"description": "\\-Fetch a random user each time the script runs.\n\n\\- Insert new (not duplicated) user on the list.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13755881"
	},
	"item": [
		{
			"name": "Fetch Random User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const id = Math.floor(Math.random()*12 +1);\r",
							"pm.globals.set(\"id\", id);\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"id\": pm.variables.get(\"id\")\r\n}\r\n\r\n\r\n"
				},
				"url": {
					"raw": "https://reqres.in/api/users/{{id}}",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fetch All Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var responseBody = pm.response.json();\r",
							"var users = responseBody.data;\r",
							"users.forEach(user => {\r",
							"    console.log(user.first_name);\r",
							"    pm.environment.set('name', user.first_name);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"//\r",
							"\r",
							"// // Extract a value from the response\r",
							"// var users = responseData.first_name+responseData.last_name;\r",
							"// users.forEach(user => {\r",
							"//     console.log(users);\r",
							"// })\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Check if data exists in a previous response\r",
							"if (pm.environment.get(\"Fetch All Users\")) {\r",
							"    var responseData = pm.environment.get(\"Fetch All Users\");\r",
							"    var newData = pm.request.body;\r",
							"    \r",
							"    // Add your logic to compare newData with responseData\r",
							"    if (\"Check for duplicates\" ) {\r",
							"        // Prevent the request from being sent\r",
							"        pm.request.cancel = true;\r",
							"        pm.environment.set(\"requestCanceled\", true);\r",
							"        console.log(\"Duplicate data detected. Request canceled.\");\r",
							"    }\r",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\" : \"Israa\",\r\n    \"job\" : \"Tester\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "{{id}}",
			"type": "string",
			"disabled": true
		}
	]
}